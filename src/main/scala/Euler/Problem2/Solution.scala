
/**
  * Even Fibonacci numbers
  *
  * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
  * By starting with 1 and 2, the first 10 terms will be:
  *
  * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  *
  * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
  * find the sum of the even-valued terms.
  *
  */


package Euler.Problem2

object Solution extends App{

  findEvenFibonaccis(10)

  def findEvenFibonaccis(number: Int): Int = {

    val range = 2 to number

    val it = range.sliding(2)

    var newSeq = Vector(1,2,3)

    while (it.hasNext && newSeq.sum < 4000000)
    {
      val newInt: Int = it.next().sum
      println(newInt)
      newSeq = newSeq :+ newInt
    }

    1
  }

}
